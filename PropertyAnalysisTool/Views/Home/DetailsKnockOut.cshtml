@model PropertyAnalysisTool.Models.PropertyModel
@{
    ViewBag.Title = Model.Title;
}

<div class="row">
    <div class="calculator-container">
        <div class="col-sm-12 text-center">
            <h1>Property Analysis KnockOut</h1>
        </div>
        <div class="col-lg-6">
            <div class="thumbnail">

                <div class="details-image-container">

                    @if (Model.HasGallery)
                    {
                        Html.RenderPartial("PropertyImageLargeSliderPartial", Model.Photos);
                    }
                    else
                    {
                        <img alt="No Image Present" />
                    }
                </div>
                <h2>@Model.Title</h2>

                <p>Listed: @Model.ListedDate</p>
                <p>@Model.FullAddress</p>
                <p>@Model.PriceDisplay</p>
                @if (!string.IsNullOrEmpty(Model.Bedrooms) || !string.IsNullOrEmpty(Model.Bathrooms))
                {
                    <p>Rooms: @Model.Bedrooms : @Model.Bathrooms</p>
                }

                <p></p>
                <p>@Model.Description</p>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="col-lg-6">
                <div class="thumbnail">

                    <h3>Purchase Price</h3>

                    <input type="number" data-bind="value: calculatedPrice" />


                    <h3>Gross Yield %</h3>

                    <input type="number" data-bind="value: calculatedYield" />

                    <h3>Vacancy Rate in Weeks</h3>

                    <input type="number" data-bind="value: calculatedVacancyRate" />

                    <h3>Rent To Achieve </h3>

                    <input type="number" data-bind="value: calculatedRent" />

                    <h3>Yearly Rent</h3>
                    <p>
                        <strong data-bind="text: proposedAnnualRentalIncome">Annual Rent</strong>
                    </p>
                </div>
                <br />
                <div class="thumbnail">
                    <h3>Interest Rate</h3>

                    <input type="number" data-bind="value: calculatedInterestRate" />

                    <h3>Yearly Interest</h3>

                    <p>
                        <strong data-bind="text: calculatedAnnualInterestAmount">Interest</strong>
                    </p>

                    <h3>Rent to cover interest</h3>

                    <p>
                        <strong data-bind="text: calculatedRentToCoverInterest">Rent For Interest</strong>
                    </p>

                    <h3>Surplus Per Week</h3>

                    <p>
                        <strong data-bind="text: calculateSurplusBeforeExpenses">Surplus before Expenses</strong>
                    </p>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="thumbnail">
                    <h3>Expenses</h3>

                    <h3>Rates Annual</h3>

                    <input type="number" data-bind="value: calculatedRates" />
                    <h3>Maintenance</h3>

                    <input type="number" data-bind="value: calculatedMaintenance" />
                    <h3>Insurance</h3>

                    <input type="number" data-bind="value: calculatedInsurance" />
                    <h3>Property Management (8%)</h3>

                    <input type="number" data-bind="value: calculatedPropertyManagement" />
                    <h3>Total Expenses</h3>

                    <p>
                        <strong data-bind="text: calculatedTotalExpense"></strong>
                    </p>

                    <h3>Rent To Cover Mortgage and Expenses</h3>

                    <p>
                        <strong data-bind="text: calculatedRentToCoverMortgageAndExpenses">Rent to Cover everything</strong>
                    </p>

                    <h3>Surplus After Expenses</h3>

                    <p>
                        <strong data-bind="text: calculatedSurplusAfterExpenses">Surplus After Expenses</strong>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">

        <p>If Gross Yield is under interest rate, then loss</p>
        <p>
            5-6% low cashflow - need great growth
        </p>
        <p>
            7-8% break even - still need good growth
        </p><p>
            9-10% or more - good cashflow
        </p>
        <p>
            If you want to own a lot of properties, then need high yield (that pay for themselves)
        </p>
        <p>
            It keeps banks happy with income
        </p>
        <p>
            property portfolio will pay for itself
        </p>
        <p>
            interest rates will rise at some point, so need a buffer
        </p>
    </div>
</div>

@functions {
    string EncodeJSON(object value)
    {
        return Newtonsoft.Json.JsonConvert.SerializeObject(value, new Newtonsoft.Json.JsonSerializerSettings
        {
            ContractResolver = new Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver()
        });
    }
}

@section scripts
{
    @Scripts.Render("~/bundles/knockout");
    @Scripts.Render("~/Scripts/ViewModel/PropertyDetailsViewModel.js");
    <script>
        $(".carousel").carousel('pause');
        $(function () {
            ko.applyBindings(new PropertyDetailsViewModel(@Html.Raw(EncodeJSON(Model))));

        });

    </script>

}