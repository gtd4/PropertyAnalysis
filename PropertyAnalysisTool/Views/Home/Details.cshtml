@model PropertyAnalysisTool.Models.PropertyModel
@{
    ViewBag.Title = Model.Title;
}

<div class="row">

    <div class="calculator-container">
        <div class="col-sm-12 text-center">
            <h1>Property Analysis</h1>
        </div>
        <div class="col-lg-6">
            @{Html.RenderPartial("PropertyDetailsInfoPartial", Model);}
        </div>
        <div class="col-lg-6">

            @{Html.RenderPartial("CalculatorPartial");}
            @*<div data-bind="component: property-calculator"></div>*@
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">

        <p>If Gross Yield is under interest rate, then loss</p>
        <p>
            5-6% low cashflow - need great growth
        </p>
        <p>
            7-8% break even - still need good growth
        </p><p>
            9-10% or more - good cashflow
        </p>
        <p>
            If you want to own a lot of properties, then need high yield (that pay for themselves)
        </p>
        <p>
            It keeps banks happy with income
        </p>
        <p>
            property portfolio will pay for itself
        </p>
        <p>
            interest rates will rise at some point, so need a buffer
        </p>
    </div>
</div>

@functions {
    string EncodeJSON(object value)
    {
        return Newtonsoft.Json.JsonConvert.SerializeObject(value, new Newtonsoft.Json.JsonSerializerSettings
        {
            ContractResolver = new Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver()
        });
    }
}

@section scripts
{


    @*@Scripts.Render("~/bundles/knockout")
        @Scripts.Render("~/Scripts/CustomKOBindings/PropertyCalculatorBinding.js")
        @Scripts.Render("~/Scripts/ViewModel/PropertyDetailsViewModel.js")*@

    <script>
       


        require([],
            function () {
                require(['/Scripts/CustomKOBindings/PropertyCalculatorBinding.js', '/Scripts/ViewModel/PropertyDetailsViewModel.js'],
                    function (ko) {
                        ko.applyBindings(new PropertyDetailsViewModel(@Html.Raw(EncodeJSON(Model))));
                    }
                );
            }
        );

        //$(".carousel").carousel('pause');
        //$(function () {


        //});


    </script>

}